{"version":3,"sources":["reportWebVitals.js","context/authContext/AuthReducer.js","context/authContext/AuthContext.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/nimet-logo.png","requestMethods.js","components/sidebar/Sidebar.jsx","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","pages/Dashboard.jsx","pages/Users.jsx","pages/IncomingFile.jsx","pages/OutgoingFile.jsx","pages/User.jsx","pages/Alerts.jsx","firebase.js","pages/ImpactBaseds.jsx","components/Routes.jsx","redux/actions/ThemeAction.js","components/layout/Layout.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AuthReducer","state","action","type","user","isFetching","error","payload","INITIAL_STATE","JSON","parse","localStorage","getItem","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","ThemeReducer","mode","color","rootReducer","combineReducers","BASE_URL","publicRequest","axios","create","baseURL","SidebarItem","props","active","className","icon","title","Sidebar","useHistory","src","nimetlogo1","alt","to","Topnav","Button","variant","StatusCard","count","Dashboard","useState","alerts","setAlerts","impactbaseds","setImpactBaseds","a","get","resAlert","data","resImpactBased","console","log","getAll","useSelector","length","Users","setUser","userRows","setUserRows","res","getUsers","handleChange","e","target","name","createUser","post","username","password","designation","fullname","staffid","deleteStaff","id","delete","columns","field","headerName","width","renderCell","params","pathname","row","_id","campaign","DeleteOutline","onClick","Accordion","defaultActiveKey","Item","eventKey","Header","Body","Form","Row","Group","as","Col","controlId","Label","onChange","sortingOrder","disableCheckboxSelection","stickyHeader","rows","disableSelectionOnClick","pageSize","checkboxSelection","getRowId","r","IncomingFile","fileId","useParams","file","setFile","getFile","subject","filename","filenumber","comingfrom","receivedby","datereceived","moment","format","createdAt","OutgoingFile","goingto","User","userId","getUser","updateUser","newuser","put","placeholder","Alerts","alert","setAlert","alertRows","setAlertRows","Date","successAlert","setSuccessAlert","errorAlert","setErrorAlert","getAlerts","handleAdd","body","Alert","onClose","dismissible","firebaseConfig","apiKey","process","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGING_SENDERID","appId","APP_ID","measurementId","MEASUREMENT_ID","firebase","initializeApp","ImpactBaseds","fileRows","setFileRows","startDate","setStartDate","endDate","setEndDate","today","mindate","setDate","getDate","maxdate","alertStartDate","alertEndDate","addFile","addAlert","getFiles","class","label","selected","date","minDate","maxDate","placeholderText","Routes","path","exact","component","exportDefault","setColor","setMode","getTheme","Layout","themeReducer","useDispatch","themeClass","colorClass","ThemeAction","render","TopNav","App","useContext","store","createStore","document","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db60030e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"LOGIN_START\":\r\n        return {\r\n          user: null,\r\n          isFetching: true,\r\n          error: false,\r\n        };\r\n      case \"LOGIN_SUCCESS\":\r\n        return {\r\n          user: action.payload,\r\n          isFetching: false,\r\n          error: false,\r\n        };\r\n      case \"LOGIN_FAILURE\":\r\n        return {\r\n          user: null,\r\n          isFetching: false,\r\n          error: true,\r\n        };\r\n      case \"LOGOUT\":\r\n        return {\r\n          user: null,\r\n          isFetching: false,\r\n          error: false,\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default AuthReducer;\r\n  ","import AuthReducer from \"./AuthReducer\";\r\nimport { createContext, useEffect, useReducer } from \"react\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\r\n  isFetching: false,\r\n  error: false,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\nimport { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({ThemeReducer})\n\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/nimet-logo.b9dcc5e9.png\";","import axios from \"axios\";\r\n//const BASE_URL = \"http://localhost:5000/api/\";\r\nconst BASE_URL = \"https://tame-gray-bass-slip.cyclic.app/api/\"\r\n\r\nexport const publicRequest = axios.create({\r\n    baseURL: BASE_URL,\r\n  });\r\n  \r\n  export const userRequest = axios.create({\r\n    baseURL: BASE_URL,\r\n    \r\n  });\r\n   ","import React, { useContext, useEffect, useState } from 'react'\n\nimport { Link, useHistory } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport nimetlogo1 from '../../assets/images/nimet-logo.png'\n\nimport { publicRequest } from '../../requestMethods'\n\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n\n    \n    const history = useHistory();\n    \n\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={nimetlogo1} alt=\" logo\" />\n            </div>\n                    <Link to=\"/\">\n                        <SidebarItem\n                            title=\"Dashboard\"\n                            icon=\"bx bx-category-alt\"\n                        />\n                    </Link>\n                    <Link to=\"/alerts\">\n                        <SidebarItem\n                            title=\"Alerts\"\n                            icon=\"bx bx-file\"\n                        />\n                    </Link>\n                    <Link to=\"/impactbaseds\">\n                        <SidebarItem\n                            title=\"Impact Based Forecasts\"\n                            icon=\"bx bx-file\"\n                        />\n                    </Link>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useContext, useEffect, useState} from 'react'\n\nimport './topnav.css'\n\nimport { Link } from 'react-router-dom'\n\nimport { AuthContext } from '../../context/authContext/AuthContext'\nimport { Button } from 'react-bootstrap'\nimport { logout } from \"../../context/authContext/AuthActions\";\nimport { useHistory } from \"react-router\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nconst Topnav = () => {\n    // const { user } = useContext(AuthContext);\n    // const decodedUser = jwtDecode(user);\n\n    // const [selectedUser, setSelectedUser] = useState(null);    \n    // const { dispatch } = useContext(AuthContext);\n    // const history = useHistory();\n    \n    \n\n    // useEffect(() => {\n    //     const getUser = async () => {\n    //       try {\n    //       const res = await axios.get(`http://localhost:5000/api/user/find/${decodedUser?.id}`);\n    //       setSelectedUser(res.data)\n    //     }\n    //      catch (err) {\n    //       console.log(err);\n    //     }\n\n    //   };\n    //   getUser();\n    //   }, []);\n\n    // const handleLogout = (e) => {\n    //     e.preventDefault();\n    //     dispatch(logout());\n    //     history.push(\"/\");\n    // }\n    \n    return (\n        <div className='topnav'>\n            <div className=\"topnav__search\">\n            <h1 className=\"\">NiMet Alert System</h1>\n            </div>\n            <div className=\"topnav__right\">\n                {/* <div className=\"topnav__right-item\">\n                    <h6 className=\"\">\n                    {selectedUser?.fullname} \n                    </h6>\n                </div> */}\n                <div className=\"topnav__right-item\">\n                </div>\n                <Button \n                    variant=\"outline-danger\"\n                    //onClick={handleLogout}\n                    >Logout</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Topnav\n","import React from 'react'\n\nimport './statuscard.css'\n\nconst StatusCard = props => {\n    return (\n        <div className='status-card'>\n            <div className=\"status-card__icon\">\n                <i className={props.icon}></i>\n            </div>\n            <div className=\"status-card__info\">\n                <h4>{props.count}</h4>\n                <span>{props.title}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default StatusCard\n","import React, {useEffect, useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport StatusCard from '../components/status-card/StatusCard'\nimport { publicRequest } from '../requestMethods';\n\n\n\nconst Dashboard = () => {\n    const [alerts, setAlerts] = useState([]);\n    const [impactbaseds, setImpactBaseds] = useState([]);\n    const [selectedUser, setSelectedUser] = useState(null);\n\n    useEffect(() => {\n        const getAll = async () => {\n          try {\n          const resAlert = await publicRequest.get('/alert');\n          setAlerts(resAlert.data)\n          const resImpactBased = await publicRequest.get('/impactbased');\n          setImpactBaseds(resImpactBased.data)\n        }\n         catch (err) {\n          console.log(err);\n        }\n      };\n      getAll();\n      }, []);\n\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <StatusCard\n                                        icon={\"bx bxs-bell-ring\"}\n                                        count={alerts?.length}\n                                        title={\"Alerts\"}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <StatusCard\n                                        icon={\"bx bxs-cloud-lightning\"}\n                                        count={impactbaseds?.length}\n                                        title={\"Impact Based Forecasts\"}\n                                    />\n                                </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React, {useState, useEffect} from 'react'\r\nimport {Button, Form, Col, Row, Accordion } from 'react-bootstrap';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';        \r\nimport { publicRequest } from '../requestMethods';\r\n\r\nconst Users = () => {\r\n    const [user, setUser] = useState(null);    \r\n    const [userRows, setUserRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const getUsers = async () => {\r\n        try {\r\n        const res = await publicRequest.get('/user');\r\n        setUserRows(res.data)\r\n        console.log(res.data)\r\n      }\r\n       catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUsers();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setUser({ ...user, [e.target.name]: value });\r\n      };\r\n\r\n      const createUser = async () => {\r\n        try {\r\n        const req = await publicRequest.post(`/user`, {\r\n          'username': user?.username,\r\n          'password': user?.password,\r\n          'designation': user?.designation,\r\n          'fullname': user?.fullname,\r\n          'staffid': user?.staffid \r\n        });\r\n      } catch (err) {\r\n        return(err)\r\n        \r\n      }\r\n    }\r\n  \r\n    const handleAdd = () => {\r\n        createUser();\r\n    }\r\n\r\n    const deleteStaff = async (id) => {\r\n      try {\r\n      const req = await publicRequest.delete(`/user/${id}`);\r\n    } \r\n    catch (err) {\r\n      return(err)\r\n    }\r\n  }\r\n\r\n    const handleDelete = (id) => {   \r\n      deleteStaff(id)\r\n    }\r\n          const columns = [\r\n\r\n            {\r\n              field: \"staffid\",\r\n              headerName: \"Staff ID\",\r\n              width: 200,\r\n            },\r\n            { field: \"fullname\", headerName: \"Full Name\", width: 200 },\r\n            { field: \"username\", headerName: \"Username\", width: 200 },\r\n            {\r\n              field: \"designation\",\r\n              headerName: \"Designation\",\r\n              width: 160,\r\n            },\r\n            { \r\n              field: \"action\",\r\n              headerName: \"Action\",\r\n              width: 150,\r\n              renderCell: (params) => {\r\n                return (\r\n                  <>\r\n                    <Link to={{pathname: \"/user/\" + params.row._id, campaign: params.row}}>\r\n                      <button className=\"button_edit\">View</button>\r\n                    </Link>\r\n                    <DeleteOutline\r\n                      className=\"button_delete\"\r\n                      onClick={() => handleDelete(params.row._id)}\r\n                    />\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n          ];\r\n\r\n\r\n    return (\r\n        <div>\r\n    <div className=\"addUser\">\r\n    <Accordion defaultActiveKey=\"0\">\r\n          <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header><h4>Add User</h4></Accordion.Header>\r\n          <Accordion.Body>\r\n          <Form>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Staff ID</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"staffid\" onChange={handleChange}/>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"username\" onChange={handleChange}/>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"password\" onChange={handleChange}/>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Full Name</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" onChange={handleChange} name=\"fullname\" />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Designation</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"designation\" onChange={handleChange}/>\r\n              </Form.Group>\r\n            </Row>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleAdd}>\r\n              Add\r\n            </Button>\r\n          </Form>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        </Accordion>\r\n        </div>\r\n\r\n            <h3 className=\"page-header\">\r\n                Users\r\n            </h3>\r\n        \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"custom_table\">\r\n                            <DataGrid\r\n                                  sortingOrder={['desc']}\r\n                                  disableCheckboxSelection\r\n                                  stickyHeader\r\n                                  rows={userRows}\r\n                                  disableSelectionOnClick\r\n                                  columns={columns}\r\n                                  pageSize={8}\r\n                                  checkboxSelection\r\n                                  getRowId={(r) => r._id}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { publicRequest } from '../requestMethods';\r\n\r\nexport default function IncomingFile() {\r\n    const { fileId } = useParams();\r\n    \r\n    const [file, setFile] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        const getFile = async () => {\r\n          try {\r\n          const res = await publicRequest.get(`/incomingfile/${fileId}`);\r\n          console.log(res.data);\r\n          setFile(res.data)\r\n        }\r\n         catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getFile();\r\n      }, []);\r\n  \r\n  return (\r\n    <div>\r\n        <div className=\"card\">\r\n            <h4>\r\n                {file?.subject}\r\n            </h4>\r\n            <div>\r\n            <ul>\r\n                \r\n                 <li>\r\n                    <strong>File Name:</strong> {file?.filename} \r\n                </li>\r\n                <li>\r\n                    <strong>File Number:</strong> {file?.filenumber} \r\n                </li>\r\n                <li>\r\n                    <strong> Coming From:</strong> {file?.comingfrom}\r\n                </li>\r\n                <li>\r\n                    <strong>Received By:</strong> {file?.receivedby}\r\n                </li>                \r\n               {file?.datereceived &&\r\n               <li>\r\n                    <strong>Date:</strong> {moment(file?.datereceived).format('MMMM Do YYYY, h:mm a')} \r\n                </li>\r\n                }\r\n                {!file?.datereceived &&\r\n               <li>\r\n                    <strong>Date:</strong> {moment(file?.createdAt).format('MMMM Do YYYY, h:mm a')} \r\n                </li>\r\n                }\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { publicRequest } from '../requestMethods';\r\n\r\nexport default function OutgoingFile() {\r\n    const { fileId } = useParams();\r\n    \r\n    const [file, setFile] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        const getFile = async () => {\r\n          try {\r\n          const res = await publicRequest.get(`/outgoingfile/${fileId}`);\r\n          setFile(res.data)\r\n        }\r\n         catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getFile(); \r\n      }, []);\r\n  \r\n  return (\r\n    <div>\r\n        <div className=\"card\">\r\n            <h4>\r\n                {file?.subject}\r\n            </h4>\r\n            <div>\r\n            <ul>\r\n                 <li>\r\n                    <strong>File Name:</strong> {file?.filename} \r\n                </li>\r\n                <li>\r\n                    <strong>File Number:</strong> {file?.filenumber} \r\n                </li>\r\n                <li>\r\n                    <strong> Going To:</strong> {file?.goingto}\r\n                </li>\r\n                <li>\r\n                    <strong>Received By:</strong> {file?.receivedby}\r\n                </li>\r\n                {file?.datereceived &&\r\n               <li>\r\n                    <strong>Date:</strong> {moment(file?.datereceived).format('MMMM Do YYYY, h:mm a')} \r\n                </li>\r\n                }\r\n                {!file?.datereceived &&\r\n               <li>\r\n                    <strong>Date:</strong> {moment(file?.createdAt).format('MMMM Do YYYY, h:mm a')} \r\n                </li>\r\n                }\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {Button, Form, Col, Row, Accordion } from 'react-bootstrap';\r\nimport { publicRequest } from '../requestMethods';\r\n\r\nexport default function User() {\r\n    const { userId } = useParams();\r\n    \r\n    const [user, setUser] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n          try {\r\n          const res = await publicRequest.get(`/user/find/${userId}`);\r\n          setUser(res.data)\r\n        }\r\n         catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getUser();\r\n      }, []);\r\n  \r\n      const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setUser({ ...user, [e.target.name]: value });\r\n      };\r\n  \r\n      const updateUser = async () => {\r\n        const newuser = user;\r\n          try {\r\n          const req = await publicRequest.put(`/user/${userId}`, newuser);\r\n        } catch (err) {\r\n          return(err)\r\n        }\r\n      }\r\n  \r\n      const handleUpdate = (e) =>{\r\n        updateUser();\r\n      }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"card\">\r\n            <h4>\r\n                {user?.staffid}\r\n            </h4>\r\n            <div>\r\n            <ul>\r\n                 <li>\r\n                    <strong>Full Name:</strong> {user?.fullname} \r\n                </li>\r\n                <li>\r\n                    <strong>Username:</strong> {user?.username} \r\n                </li>\r\n                <li>\r\n                    <strong> Designation:</strong> {user?.designation}\r\n                </li>\r\n            </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"addUser\">\r\n    <Accordion defaultActiveKey=\"0\">\r\n          <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header><h4>Edit User</h4></Accordion.Header>\r\n          <Accordion.Body>\r\n          <Form>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Staff ID</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"staffid\" placeholder={user?.staffid} onChange={handleChange}/>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"username\" placeholder={user?.username} onChange={handleChange}/>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"password\" onChange={handleChange}/>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Full Name</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" onChange={handleChange} placeholder={user?.fullname} name=\"fullname\" />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Designation</Form.Label>\r\n                <input className=\"form-control\" type=\"text\" name=\"designation\" placeholder={user?.designation} onChange={handleChange}/>\r\n              </Form.Group>\r\n            </Row>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleUpdate}>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        </Accordion>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, {useState, useEffect, useContext} from 'react'\nimport {Alert, Button, Form, Col, Row, Accordion } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../context/authContext/AuthContext'\nimport jwtDecode from 'jwt-decode';\nimport { publicRequest } from '../requestMethods';\n\n\nconst Alerts = () => {\n    // const { user } = useContext(AuthContext);\n    // const decodedUser = jwtDecode(user);\n\n    const [alert, setAlert] = useState(null);    \n    const [alertRows, setAlertRows] = useState([]);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [successAlert, setSuccessAlert] = useState(\"\");\n    const [errorAlert, setErrorAlert] = useState(\"\");\n    \n\n    useEffect(() => {\n      const getAlerts = async () => {\n        try {\n        const res = await publicRequest.get('/alert');\n        setAlertRows(res.data)\n      }\n       catch (err) {\n        console.log(err);\n      }\n    };\n    getAlerts();\n    }, []);\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        setAlert({ ...alert, [e.target.name]: value });\n      };\n\n      const handleAdd = async (e) => {\n        //e.preventDefault()\n        try {\n        const req = await publicRequest.post(`/alert`, {\n          'title': alert?.title,\n          'body': alert?.body,\n        });\n        setSuccessAlert(true)\n      } \n      catch (err) {\n        setErrorAlert(true)\n      }\n    }\n\n    const deleteAlert = async (id) => {\n      try {\n      const req = await publicRequest.delete(`/alert/${id}`);\n    } catch (err) {\n      return(err)\n      \n    }\n  }\n\n    const handleDelete = (id) => {   \n      deleteAlert()\n    }\n\n\n    const columns = [\n             \n      {\n        field: \"createdAt\",\n        headerName: \"Date\",\n        width: 200,\n      },\n      { field: \"title\", headerName: \"Title\", width: 200 },\n      { field: \"body\", headerName: \"Body\", width: 600 },\n    ];\n\n\n    return (\n    <div>\n      <div>\n      {successAlert &&\n      <Alert variant=\"success\" onClose={() => setSuccessAlert(false)} dismissible>\n          Alert added successfully\n      </Alert>\n      }\n      </div>\n      <div>\n      {errorAlert &&\n      <Alert variant=\"danger\" onClose={() => setErrorAlert(false)} dismissible>\n          Alert not added! Try again\n      </Alert>\n      }\n      </div>\n    <div className=\"addFile\">\n    <Accordion defaultActiveKey=\"0\">\n          <Accordion.Item eventKey=\"1\">\n          <Accordion.Header><h4>Add Alert</h4></Accordion.Header>\n          <Accordion.Body>\n          <Form>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Title</Form.Label>\n                <input className=\"form-control\" type=\"text\" name=\"title\" onChange={handleChange}/>\n              </Form.Group>\n            </Row>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>Body</Form.Label>\n                <textarea className=\"form-control\" type=\"text\" onChange={handleChange} name=\"body\" rows=\"8\" />\n              </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={handleAdd}>\n              Add\n            </Button>\n          </Form>\n          </Accordion.Body>\n        </Accordion.Item>\n        </Accordion>\n        </div>\n\n            <h3 className=\"page-header\">\n               Alerts\n            </h3>\n        \n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card__body\">\n                        <div className=\"custom_table\">\n                            <DataGrid\n                                  \n                                  disableCheckboxSelection\n                                  stickyHeader\n                                  rows={alertRows}\n                                  disableSelectionOnClick\n                                  columns={columns}\n                                  pageSize={8}\n                                  checkboxSelection\n                                  getRowId={(r) => r._id}\n                                />\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Alerts\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.API_KEY,\r\n    authDomain: process.env.AUTH_DOMAIN,\r\n    projectId: process.env.PROJECT_ID,\r\n    storageBucket: process.env.STORAGE_BUCKET,\r\n    messagingSenderId: process.env.MESSAGING_SENDERID,\r\n    appId: process.env.APP_ID,\r\n    measurementId: process.env.MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { DataGrid } from '@material-ui/data-grid';\r\nimport React, {useState, useEffect} from 'react'\r\nimport {Alert, Button, Form, Col, Row, Accordion } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { publicRequest } from '../requestMethods';\r\nimport DatePicker from 'react-datepicker';\r\nimport axios from 'axios';\r\nimport firebase from '../firebase';\r\nimport moment from 'moment/moment';\r\n\r\nconst ImpactBaseds = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [previewImages, setPreviewImages] = useState([]);\r\n  const [successAlert, setSuccessAlert] = useState(\"\");\r\n  const [errorAlert, setErrorAlert] = useState(\"\");\r\n  const [fileRows, setFileRows] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [impactbased, setImpactBased] = useState(\"\")\r\n    \r\n  var today = new Date();\r\n  var mindate = today.setDate(today.getDate()-10);\r\n  var maxdate = today.setDate(today.getDate()+13);\r\n    \r\n  const alertStartDate = moment(startDate).format(\"Do MMM\")\r\n  const alertEndDate = moment(endDate).format(\"Do MMM YYYY\")\r\n\r\n  \r\n  const handleAdd = async (e) => {\r\n    //e.preventDefault()\r\n    try {\r\n    const addFile = await publicRequest.post(`/impactbased`, {\r\n      'startdate': startDate,\r\n      'enddate': endDate,\r\n    });\r\n        \r\n    const addAlert = await publicRequest.post(`/alert`, {\r\n      'title': 'Impact Based',\r\n      'body': `Impact Based Forecast valid from ${alertStartDate} to ${alertEndDate} is now available`,\r\n    });\r\n\r\n    addFile();\r\n    addAlert();\r\n    setSuccessAlert(true)\r\n    } \r\n    catch (err) {\r\n    setErrorAlert(true)\r\n  }\r\n}\r\n  \r\n    useEffect(() => {\r\n      const getFiles = async () => {\r\n        try {\r\n        const res = await publicRequest.get('/impactbased');\r\n        setFileRows(res.data)\r\n        console.log(res.data)\r\n      }\r\n       catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getFiles();\r\n    }, []); \r\n\r\n  \r\n    const deleteFile = async (id) => {\r\n      try {\r\n      const req = await publicRequest.delete(`/incomingfile/${id}`);\r\n    } catch (err) {\r\n      return(err)\r\n      \r\n    }\r\n  }\r\n   \r\n  \r\n    const columns = [\r\n      {\r\n        field: \"advisory\",\r\n        headerName: \"Advisory\",\r\n        width: 400,\r\n      },       \r\n      {\r\n        field: \"startdate\",\r\n        headerName: \"Start Date\",\r\n        width: 400,\r\n      },\r\n      { field: \"enddate\", headerName: \"End Date\", width: 400 },\r\n\r\n      { \r\n        field: \"action\",\r\n        headerName: \"Action\",\r\n        width: 140,\r\n        renderCell: (params) => {\r\n          return (\r\n            <>\r\n              {/* <Link to={{pathname: \"/outgoingfile/\" + params.row._id, file: params.row, fileId: params.row._id}}>\r\n                <button className=\"button_edit\">View</button>\r\n              </Link> */}\r\n              {/* <DeleteOutline\r\n                className=\"button_delete\"\r\n                onClick={() => handleDelete(params.row._id)}\r\n              /> */}\r\n            </>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n    <div>\r\n        <div>\r\n      {successAlert &&\r\n      <Alert variant=\"success\" onClose={() => setSuccessAlert(false)} dismissible>\r\n          Alert added successfully\r\n      </Alert>\r\n      }\r\n      </div>\r\n      <div>\r\n      {errorAlert &&\r\n      <Alert variant=\"danger\" onClose={() => setErrorAlert(false)} dismissible>\r\n          Alert not added! Try again\r\n      </Alert>\r\n      }\r\n      </div>\r\n\r\n    <div className=\"addFile\">\r\n    <Accordion defaultActiveKey=\"0\">\r\n          <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header><h4>Add Impact Based Alert</h4></Accordion.Header>\r\n          <Accordion.Body>\r\n          <Form>\r\n            <Row className=\"mb-3\">\r\n            <Form.Group as={Col} controlId=\"formGridDescription\">\r\n                <Form.Label>Advisory</Form.Label>\r\n                <select class=\"form-select\" label=\"Advisory\">\r\n                   <option selected>SELECT</option>\r\n                    <option value=\"watch\">WATCH</option>\r\n                    <option value=\"caution\">CAUTION</option>\r\n                    <option value=\"danger\">DANGER</option>\r\n                  </select>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridDescription\">\r\n                <Form.Label>Start Date</Form.Label>\r\n                <DatePicker\r\n                      className=\"form-control\"\r\n                      selected={startDate}\r\n                      onChange={(date) => setStartDate(date)}\r\n                      minDate={mindate}\r\n                      maxDate={maxdate}\r\n                      placeholderText=\"Select a date\"\r\n                    />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridDescription\">\r\n                <Form.Label>End Date</Form.Label>\r\n                <DatePicker\r\n                      className=\"form-control\"\r\n                      selected={endDate}\r\n                      onChange={(date) => setEndDate(date)}\r\n                      minDate={mindate}\r\n                      maxDate={maxdate}\r\n                      placeholderText=\"Select a date\"\r\n                    />\r\n              </Form.Group>\r\n            </Row>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleAdd}>\r\n              Add\r\n            </Button>\r\n          </Form>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        </Accordion>\r\n        </div>\r\n\r\n            <h3 className=\"page-header\">\r\n               Impact Based Alerts\r\n            </h3>\r\n        \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__body\">\r\n                        <div className=\"custom_table\">\r\n                            <DataGrid\r\n                                  sortingOrder={['desc']}\r\n                                  disableCheckboxSelection\r\n                                  stickyHeader\r\n                                  rows={fileRows}\r\n                                  disableSelectionOnClick\r\n                                  columns={columns}\r\n                                  pageSize={8}\r\n                                  checkboxSelection\r\n                                  getRowId={(r) => r._id}\r\n                                />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImpactBaseds\r\n","import React from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Users from '../pages/Users'\nimport IncomingFile from '../pages/IncomingFile'\nimport OutgoingFile from '../pages/OutgoingFile'\nimport User from '../pages/User'\nimport Alerts from '../pages/Alerts'\nimport ImpactBaseds from '../pages/ImpactBaseds'\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path='/' exact component={Dashboard}/>\n            <Route path='/alerts' component={Alerts}/>\n            <Route path='/impactbaseds' component={ImpactBaseds}/>\n            <Route path='/users' component={Users}/>      \n            <Route path='/incomingfile/:fileId' component={IncomingFile}/>\n            <Route path='/outgoingfile/:fileId' component={OutgoingFile}/>\n            <Route path='/user/:userId' component={User}/>       \n        </Switch>\n    )\n}\n\nexport default Routes\n","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME'\n    }\n}\n\nconst exportDefault = {\n    setColor,\n    setMode,\n    getTheme\n}\n\nexport default exportDefault","import React, {useEffect} from 'react'\n\nimport './layout.css'\n\nimport Sidebar from '../sidebar/Sidebar'\nimport TopNav from '../topnav/TopNav'\nimport Routes from '../Routes'\nimport Login from '../../pages/Login/Login'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\nimport Dashboard from '../../pages/Dashboard'\n\nconst Layout = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\n\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\n\n        dispatch(ThemeAction.setMode(themeClass))\n\n        dispatch(ThemeAction.setColor(colorClass))\n    }, [dispatch])\n\n    return (\n        <BrowserRouter>\n        {/* <Route path='/' component={Dashboard}/> */}\n            <Route render={(props) => (\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                    <Sidebar {...props}/>\n                    <div className=\"layout__content\">\n                        <TopNav/>\n                        <div className=\"layout__content-main\">\n                            <Routes/>\n                        </div>\n                    </div>\n                </div>\n            )}/>\n        </BrowserRouter>\n    )\n}\n\nexport default Layout\n","import React, {useContext, useEffect} from 'react';\r\n\r\nimport Layout from './components/layout/Layout'\r\nimport Login from './pages/Login/Login';\r\nimport { AuthContext } from './context/authContext/AuthContext'\r\nimport { Redirect, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport './App.css'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from './redux/actions/ThemeAction'\r\nimport Dashboard from './pages/Dashboard';\r\nimport ImpactBaseds from './pages/ImpactBaseds';\r\n\r\n\r\nfunction App(props) {\r\n    const { user } = useContext(AuthContext);\r\n    \r\n    const themeReducer = useSelector(state => state.ThemeReducer)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\r\n\r\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\r\n\r\n        dispatch(ThemeAction.setMode(themeClass))\r\n\r\n        dispatch(ThemeAction.setColor(colorClass))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    return ( \r\n    //   <Router>   \r\n    //   <Switch>\r\n    //   <Route exact path=\"/\">\r\n    //       {user ? <Layout /> : <Redirect to=\"/login\" />}\r\n    //     </Route>\r\n    //  <Route path=\"/login\">{!user ? <Login /> : <Redirect to=\"/\" />}</Route>\r\n      \r\n    //   {user && (\r\n    //   <>\r\n    //   <Route path='/' > <Layout /> </Route>\r\n    //     </>\r\n    //   )}       \r\n    //   </Switch>\r\n    //   </Router>\r\n    <Layout />   \r\n    )\r\n  }\r\n  \r\n  export default App;\r\n  ","import React, {useContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\nimport { AuthContext, AuthContextProvider } from './context/authContext/AuthContext'\n\nimport rootReducer from './redux/reducers'\n\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\nimport './assets/css/grid.css'\nimport './assets/css/theme.css'\nimport './assets/css/index.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport App from './App';\n\nconst store = createStore(\n  rootReducer\n)\n\ndocument.title = 'NiMet FTS'\n\nReactDOM.render(\n  <Provider store={store}>\n    <AuthContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    </AuthContextProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}